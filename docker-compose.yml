version: '3.9'

services:
  xm-crud:
    container_name: xm-crud
    image: mpgallage/xm-crud:1.0.0
    build: .
    environment:
      SERVER_PORT: ${SERVER_PORT}
      DATABASE_ARGS: "host=${DB_HOST} port=${DB_PORT} user=${DB_USER} dbname=${DB_NAME} password=${DB_PASS} sslmode=disable"
      JWT_KEY: "${JWT_KEY}"
      KAFKA_URL: "${KAFKA_URL}"
      KAFKA_TOPIC: "${KAFKA_TOPIC}"
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - pg-db
      - kafka

  pg-db:
    image: postgres:15.3-alpine
    container_name: pp-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: "${ZOOKEEPER_CLIENT_PORT}"
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_CLIENT_PORT}"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "${KAFKA_TOPIC}:1:1"

volumes:
    pgdata: {}
